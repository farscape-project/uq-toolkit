{
    "apps":
    {
        "cube_thermal_mechanical.i":
        {
            "type":"moose",
            "uncertain-params":
            {
                /*
                can nest this dict as {"moose":"uncertain-params"} or {moose_input_file_path:"uncertain-params", python_file_path:"uncertain-params"}
                */
                /*
                    Currently I envision 3 standard types; "csv", "xy" and "value".
                    "value" will be generalisable across different inputs (mesher, moose etc)
                    "csv" is same,
                    "xy" and other moose-specific ones can be added
                */
                "Functions":
                {
                    "copper_tc" :
                    {
                        "type": "csv",
                        "distribution": {"name":"uniform", "loc":0.99, "scale":0.02, "fraction":true},
                        "fit_poly": {"deg":1},
                    },
                    "copper_sh" :
                    {
                        "type": "csv",
                        "distribution": {"name":"uniform", "loc":0.99, "scale":0.02, "fraction":true},
                        "fit_poly": {"deg":1},
                        "deg": 1
                    },
                    "copper_thermal_expansion" :
                    {
                        "type": "csv",
                        "distribution": {"name":"uniform", "loc":0.99, "scale":0.02, "fraction":true},
                        "fit_poly": {"deg":3},
                    },
                },
                "Materials":
                {
                    "copper_density":
                    {
                        "type": "xy", // will parse "x" and "y" parameter from moose input
                        "fit_poly": {"deg":1},
                        "distribution": {"name":"uniform", "loc":0.99, "scale":0.02, "fraction":true},
                    }
                },
                "BCs":
                {
                    "heat-load":
                    {
                        "type" : "value", // implies this is a scalar
                        "value_name":"value",
                        "distribution": {"name":"uniform", "loc":0.95, "scale":0.1, "fraction":true},
                    }
                }
            },
            "uq_log_name": "uq_log_solid",
        }
    },
    "paths":
    {
        "workdir":"./",
        "baseline_dir":"basedir",
    },

    "sampler" : "montecarlo",
    "num_samples" : 10,
    // "nproc_per_sample" : 32,
    "launcher" : "bash",
    "template_launcher_script":"runpar.sh",
    
    // parameters for run
    "launcher_name" : "launcher.sh",
    // "num_parallel_samples" : 1, 
}
